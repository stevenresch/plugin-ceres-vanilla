{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

{{ component( "Ceres::Customer.Components.CountrySelect" ) }}

<script type="x/template" id="vue-address-input-group">

    <div>
        <div v-if="localeToShow == 'DE' && addressType === '1'">
            {% include "Ceres::Customer.Components.AddressInputGroup.Locale.BillingAddressInputGroupDE" %}
        </div>

        <div v-if="localeToShow == 'GB' && addressType === '1'">
            {% include "Ceres::Customer.Components.AddressInputGroup.Locale.BillingAddressInputGroupGB" %}
        </div>

        <div v-if="localeToShow == 'DE' && addressType === '2'">
            {% include "Ceres::Customer.Components.AddressInputGroup.Locale.DeliveryAddressInputGroupDE" %}
        </div>

        <div v-if="localeToShow == 'GB' && addressType === '2'">
            {% include "Ceres::Customer.Components.AddressInputGroup.Locale.DeliveryAddressInputGroupGB" %}
        </div>

        <div class="col-xs-12 col-sm-4">
            <country-select
                template="#vue-country-select"
                :selected-country-id.sync="addressData.countryId"
                :selected-state-id.sync="addressData.stateId"
                @selected-country-changed="onSelectedCountryChanged"
                :country-list="{{ services.country.getActiveCountriesList() | json_encode() }}"
                :country-name-map="{{ services.country.getActiveCountryNameMap(services.sessionStorage.getLang())| json_encode() }}"
                :address-type="addressType">
            </country-select>
        </div>
    </div>

</script>